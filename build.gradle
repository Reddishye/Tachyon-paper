plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'com.gradleup.shadow' version '9.0.0-beta4'
}

apply plugin: 'maven-publish'

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
    maven {
        url = uri('https://repo.papermc.io/repository/maven-public/')
    }
    maven {
        url = uri('https://jitpack.io')
    }
    maven {
        url = uri("https://repo.codemc.io/repository/maven-snapshots/")
    }
    maven {
        name = "papermc"
        url = uri("https://repo.papermc.io/repository/maven-public/")
    }
    maven {
        url = uri('https://plugins.gradle.org/m2/')
    }
}

dependencies {
    api libs.org.jetbrains.annotations
    compileOnly libs.org.spigotmc.spigot.api
    implementation 'com.github.retrooper.packetevents:spigot:2.2.0'
    implementation 'com.google.inject:guice:7.0.0'
    implementation 'com.google.inject.extensions:guice-assistedinject:7.0.0'
}

group = 'com.github.Reddishye'
version = '1.0'
description = 'TachyonRefreshed'
java.sourceCompatibility = JavaVersion.VERSION_21

java {
    withSourcesJar()
    withJavadocJar()
}

publishing {
    publications {
        shadow(MavenPublication) { publication ->
            project.shadow.component(publication)
            artifactId = 'TachyonRefreshed'
            version = project.version
            
            pom {
                name = 'TachyonRefreshed'
                description = 'A high-performance schematic library for Minecraft'
                url = 'https://github.com/redactado/Tachyon-paper'
                
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
                
                developers {
                    developer {
                        id = 'redactado'
                        name = 'Redactado'
                    }
                }
            }
        }
    }
}

wrapper {
    gradleVersion = "8.10"
    distributionType = Wrapper.DistributionType.ALL
}

shadowJar {
    archiveBaseName.set('TachyonRefreshed')
    archiveClassifier.set('')
    archiveVersion.set('')
    
    // Relocate all dependencies
    relocate 'io.github.retrooper.packetevents', 'es.redactado.tachyonRefreshed.lib.packetevents'
    relocate 'com.google.inject', 'es.redactado.tachyonRefreshed.lib.guice'
    relocate 'com.google.common', 'es.redactado.tachyonRefreshed.lib.guava'
    relocate 'org.aopalliance', 'es.redactado.tachyonRefreshed.lib.aopalliance'
    relocate 'javax.inject', 'es.redactado.tachyonRefreshed.lib.javax.inject'
    
    // Minimize the jar to remove unused classes
    minimize()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}

// Make the jar task depend on shadowJar and use its output
jar {
    enabled = false
    dependsOn(shadowJar)
}